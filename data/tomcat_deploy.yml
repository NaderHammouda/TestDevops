---
- hosts: localhost
  connection: local
  become: yes
  remote_user: root
  vars_files:
  - ./env_variables

  tasks:
    - name: Ensure the system can use the HTTPS transport for APT.
      stat:
        path: /usr/lib/apt/methods/https
      register: apt_https_transport
    
    - name: Install APT HTTPS transport.
      apt:
        name: "apt-transport-https"
        state: present
        update_cache: yes
      when: not apt_https_transport.stat.exists
    
    - name: Install basic packages
      package:
        name: ['vim','aptitude','bash-completion','tree','htop','wget','unzip','curl','git']
        state: present
        update_cache: yes
    
    - name: Install Default Java (Debian/Ubuntu)
      apt:
        name: default-jdk
        state: present
    
    - name: Add tomcat group
      group:
        name: tomcat
    
    - name: Add "tomcat" user
      user:
        name: tomcat
        group: tomcat
        home: /usr/share/tomcat
        createhome: no
        system: yes
    
    - name: Download Tomcat
      get_url:
        url: "{{ tomcat_archive_url }}"
        dest: "{{ tomcat_archive_dest }}"
    
    - name: Create a tomcat directory
      file:
        path: /usr/share/tomcat
        state: directory
        owner: tomcat
        group: tomcat

    - name: Set Java Heap max size to :256Mo if env is dev
      shell: echo "export JAVA_OPTS='-Xmx256m'" > /etc/environment && source /etc/environment
      when: stage == "dev"
    
    - name: Set Java Heap max size to :512Mo if env is prod
      shell: echo "export JAVA_OPTS='-Xmx256m'" > /etc/environment && source /etc/environment
      when: stage == "prod"
    
    - name: Extract tomcat archive
      unarchive:
        src: "{{ tomcat_archive_dest }}"
        dest: /usr/share/tomcat
        owner: tomcat
        group: tomcat
        remote_src: yes
        extra_opts: "--strip-components=1"
        creates: /usr/share/tomcat/bin

    - name: Copy tomcat service file
      template:
        src: templates/tomcat.service.j2
        dest: /etc/systemd/system/tomcat.service
    
    - name: Start and enable tomcat
      service:
        daemon_reload: yes
        name: tomcat
        state: started
        enabled: yes
    
    - name: Set UI access credentials
      template:
        src: tomcat-users.xml.j2
        dest: /usr/share/tomcat/conf/tomcat-users.xml

    - name: Copy the file WAR to webapps 
      copy: src=wars/sample.war dest="/var/lib/tomcat9/webapps/sample.war" mode=0755
    
    - name: restart tomcat
      service:
        name: tomcat
        state: restarted